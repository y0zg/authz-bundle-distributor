apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "authz-bundle-distributor.fullname" . }}
  labels:
    {{- include "authz-bundle-distributor.standardLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.minReplicas }}
  selector:
    matchLabels:
      {{- include "authz-bundle-distributor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "authz-bundle-distributor.standardLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app"
                      operator: In
                      values:
                      - {{ template "authz-bundle-distributor.name" . }}
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          env:
          {{ $lines := splitList "\n" (tpl (.Values.configloader.file | .Files.Get) . ) -}}
          {{- range $lines }}
          {{- if not (. | trim | empty) -}}
          {{- $kv := . | splitn ":" 2 }}
            - name: {{ $kv._0 }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "authz-bundle-distributor.secretName" $ }}
                  key: {{ $kv._0 }}
          {{ end -}}
          {{- end -}}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
